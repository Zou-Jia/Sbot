buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
    }
}

repositories {
    mavenCentral()
    jcenter()
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'signing'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

group = 'com.ullink.slack'
archivesBaseName = 'simpleslackapi'
version = '0.4.3'


task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required false
    sign configurations.archives
}

publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar 
                artifact javadocJar
                pom.withXml {
                    def node = asNode()
                    node.appendNode('name','Simple Slack API')
                    node.appendNode('description','A simple API to build bot running on Slack')
                    node.appendNode('url','https://github.com/Ullink/simple-slack-api')
                    def licenseNode = node.appendNode('licenses').appendNode('license')
                    licenseNode.appendNode('name','CC0 1.0 Universal (CC0 1.0)')
                    licenseNode.appendNode('url','http://creativecommons.org/publicdomain/zero/1.0/')
                    def developersNode = node.appendNode('developers')
                    def bcorne = developersNode.appendNode('developer')
                    bcorne.appendNode('id','bcorne')
                    bcorne.appendNode('name','Benoit Corne')
                    bcorne.appendNode('email','benoit.corne@gmail.com')
                    def contributorsNode = node.appendNode('contributors')
                    def csprecher = contributorsNode.appendNode('contributor')
                    csprecher.appendNode('name','Christian Sprecher')
                    csprecher.appendNode('email','kindofwhat@gmail.com')
                    csprecher.appendNode('url','https://github.com/kindofwhat')
                    def scm = node.appendNode('scm')
                    scm.appendNode('connection','scm:git:git@github.com:Ullink/simple-slack-api.git')
                    scm.appendNode('developerConnection','scm:git:git@github.com:Ullink/simple-slack-api.git')
                    scm.appendNode('url','git@github.com:Ullink/simple-slack-api.git')
                }
            }
        }
    }

    bintray {
        if (this.hasProperty('bintray_user')) {
            user = bintray_user //this usually comes from gradle.properties file in ~/.gradle
            key = bintray_api_key //this usually comes from gradle.properties file in ~/.gradle

            publications = ['mavenJava'] //When uploading Maven-based publication files
            dryRun = false //Whether to run this as dry-run, without deploying
            publish = true //If version should be auto published after an upload
            pkg {
                repo = 'maven'
                name = 'com.ullink.slack:simpleslackapi'
                desc = 'simple slack API package!'
                websiteUrl = 'https://github.com/Ullink/simple-slack-api'
                issueTrackerUrl = 'https://github.com/Ullink/simple-slack-api/issues'
                vcsUrl = 'https://github.com/Ullink/simple-slack-api.git'
                licenses = ['Apache-2.0']
                labels = ['slack']
                publicDownloadNumbers = true
                version {
                    name = project.version //Bintray logical version name
                    desc = ''
                    mavenCentralSync {
                        sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
                        user = ossrhUsername //OSS user token
                        password = ossrhPassword //OSS user password
                        close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
                    }
                }
            }
        }
    }

dependencies {
    compile 'org.glassfish.tyrus.bundles:tyrus-standalone-client:1.8.3'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.apache.httpcomponents:httpclient:4.4'
    compile 'com.google.guava:guava:18.0'

    testCompile 'org.jmockit:jmockit:1.12'
    testCompile 'org.assertj:assertj-core:1.7.0'
    testCompile 'junit:junit:4.11'
    testCompile 'org.slf4j:slf4j-simple:1.7.7'
}
